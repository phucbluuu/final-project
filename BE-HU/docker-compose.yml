version: "3"
services:
  nosql-db:
    image: mongo:jammy
    ports:
      - "27017:27017"
    container_name: nosql-db
    networks:
      - my-db
    volumes:
      - ./db/:/data/db
  rabbitmq:
    image: rabbitmq:alpine
    container_name: rabbitmq
    networks:
      - my-db
    ports:
      - "5672:5672"
  products:
    build:
      dockerfile: Dockerfile
      context: ./products
    container_name: products
    ports:
      - "8002:8002"
    restart: always
    networks:
      - my-db
    depends_on:
      - "nosql-db"
      - "rabbitmq"
      - "customer"
    volumes:
      - .:/app
      - /app/products/node_modules

    env_file:
      - ./products/.env.dev
  shopping:
    build:
      dockerfile: Dockerfile
      context: ./shopping
    container_name: shopping
    ports:
      - "8003:8003"
    networks:
      - my-db
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
      - "customer"
    volumes:
      - .:/app
      - /app/shopping/node_modules
    env_file:
      - ./shopping/.env.dev
  customer:
    build:
      dockerfile: Dockerfile
      context: ./customer
    container_name: customer
    ports:
      - "8001:8001"
    networks:
      - my-db
    restart: always
    depends_on:
      - "nosql-db"
      - "rabbitmq"
    volumes:
      - .:/app/
      - /app/customer/node_modules
    env_file:
      - ./customer/.env.dev

  gateway:
    build:
      dockerfile: Dockerfile
      context: ./gateway
    container_name: gateway
    ports:
      - "8000:8000"
    restart: always
    networks:
      - my-db
    depends_on:
      - "products"
      - "customer"
      - "shopping"
    volumes:
      - .:/app/
      - /app/gateway/node_modules
    env_file:
      - ./gateway/.env.dev
  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    networks:
      - my-db
    depends_on:
      - products
      - shopping
      - customer
    ports:
      - 80:80
networks:
  my-db:
    driver: bridge
